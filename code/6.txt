#1. Write a function that accepts a list and returns a dictionary whose keys are the list’s numbers and whose values are the respective numbers’ squares. 
def dictOfSquares(list):
  squaresDict = {}
  for num in list:
    squaresDict[num] = num ** 2
  return squaresDict

myDict = dictOfSquares([1, 2, 3, 4, 5])
print(myDict)

#2.  Write a function that returns the sum of all the values in a dictionary.
def sumOfValues(dict):
  sum = 0
  for key in dict:
    sum += dict[key]
  return sum

sum = sumOfValues({'data1':5, 'data2':3, 'data3':10})
print(sum)

#3. Write a function that returns the sum of all the values in a dictionary using values().
def sumOfValues(dict):
  sum = 0
  for num in dict.values():
    sum += num
  return sum

sum = sumOfValues({'data1':5, 'data2':3, 'data3':10})
print(sum)

#4. Write a function that accepts a string and returns a dictionary whose keys are the letters in the string and whose values are the amount of times each letter appears in the string.
def countLetters(string):
  string = string.lower()
  letterDict = {}
  for letter in string:
    if letter in letterDict:
      letterDict[letter] += 1
    else:
      letterDict[letter] = 1
  return letterDict

print(countLetters('Hello World!'))

#5. Given a dictionary of student scores, write a function that returns a dictionary that contains the students’ names as keys and their grades as values
scorebook = {
  "Harry": 81,
  "Ron": 78,
  "Hermione": 99, 
  "Draco": 62,
  "Neville": 57,
}

def convertScores(scorebook):
  gradebook = {}
  for student in scorebook:
    score = scorebook[student]
    if score >= 90:
      grade = "A"
    elif score >= 80:
      grade = "B"
    elif score >= 70:
      grade = "C"
    elif score >= 60:
      grade = "D"
    else:
      grade = "F"
    gradebook[student] = grade
  return gradebook

gradebook = convertScores(scorebook)
print(gradebook)

#6. Create a function that will add a new country entry to the travel log.
travel_log = {
  "France": {
      "visits": 12,
      "cities": ["Paris", "Lille", "Dijon"]
  },
  "Italy": {
      "visits": 5,
      "cities": ["Rome", "Venice", "Florence"]
  }
}
def addCountry(country, visits, cities):
  travel_log[country] = {"visits": visits, "cities": cities}
  
addCountry("Russia", 2, ["Moscow", "Saint Petersburg"])
print(travel_log)

#7. Write a function that displays each country in the log of the previous program in the following format:
	#You've visited France 12 times.
  #You've been to Paris, Lille, and Dijon.
def display_log():
  for country in travel_log:
    visits = travel_log[country]["visits"]
    cities = travel_log[country]["cities"]
    if len(cities) > 1:
        cities_str = ', '.join(cities[:-1]) + ', and ' + cities[-1]
    else:
        cities_str = cities[0]
    print(f"You've visited {country} {visits} times.")
    print(f"You've been to {cities_str}.")
display_log()

#8. Write a program that will collect the names and bids of different people. The program should ask for each bidder's name and their bid individually. If there are other bidders, the screen should clear, so you can pass the device to the next person. If there are no more bidders, then the program should display the name of the winner and their winning bid.
from replit import clear

bids = {}
stillBidding = True

def getWinner(bids):
  highestBidder = list(bids.keys())[0]
  for bidder in bids:
    if bids[bidder] > bids[highestBidder]:
      highestBidder = bidder
  return highestBidder
  
while stillBidding:
  name = input("What is your name? ")
  bid = int(input("How much will you bid? "))
  bids[name] = bid
  other_bidders = input("Are there any other bidders? Type 'yes' or 'no'")
  clear()
  if other_bidders == "no":
    stillBidding = False

winner = getWinner(bids)
print(f"The winner is {winner} with a bid of ${bids[winner]}!")
